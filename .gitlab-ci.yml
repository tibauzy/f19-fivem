stages:
  - build
  - deploy

.buildscript: &build_windows
  stage: build
  script:
    - ".\\code\\tools\\ci\\build.ps1 -DontUpload $true"

build_client:
  <<: *build_windows
  tags:
    - vs2017
    - client
  variables:
    IS_FXSERVER: '0'
    IS_LAUNCHER: '0'
  artifacts:
    paths:
      - caches/diff/
      - caches/caches.xml
      - caches/CitizenFX.exe.xz
      - caches/version.txt
    expire_in: 1 month
  cache:
    key: client
    untracked: true
    paths:
      - code/shared/citversion.h
      - code/build/
  except:
    - server-ci
    - tags

build_client_rdr3:
  <<: *build_windows
  tags:
    - vs2017
    - client2
  variables:
    IS_FXSERVER: '0'
    IS_LAUNCHER: '0'
    IS_RDR3: '1'
  artifacts:
    paths:
      - caches/diff/
      - caches/caches.xml
      - caches/CitizenFX.exe.xz
      - caches/version.txt
    expire_in: 1 month
  cache:
    key: rdr3
    untracked: true
    paths:
      - code/shared/citversion.h
      - code/build/
  except:
    - server-ci
    - tags
    
build_launcher:
  <<: *build_windows
  tags:
    - vs2017
    - client
  variables:
    IS_FXSERVER: '0'
    IS_LAUNCHER: '1'
  artifacts:
    paths:
      - caches/diff/
      - caches/caches.xml
      - caches/CitizenFX.exe.xz
      - caches/version.txt
    expire_in: 1 month
  cache:
    key: launcher
    untracked: true
    paths:
      - code/shared/citversion.h
      - code/build/
  except:
    - server-ci
    - tags

build_server_windows:
  <<: *build_windows
  tags:
    - vs2017
    - server
  variables:
    IS_FXSERVER: '1'
    IS_LAUNCHER: '0'
  artifacts:
    paths:
      - out/server.zip
  except:
    - tags
    #- master
    - feature/update-to-1365
    #- portability-rdr3
    #- feature/update-to-1493
  cache:
    key: server
    untracked: true

build_proot_linux:
  stage: build
  image: mcr.microsoft.com/dotnet/core/sdk:2.2-alpine3.9
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    # workaround gitlab-ci-multi-runner#2148
    GIT_SSL_CAPATH: /etc/ssl/certs/
    DOCKER_TLS_CERTDIR: ""
  script: 
    - sh code/tools/ci/build_server_proot.sh
  artifacts:
    paths:
      - fx.tar.xz
  except:
    - tags
    #- master
    - feature/update-to-1365
    - feature/update-to-1604
    - feature/cloning-stuff-releng
    - feature/cloning-plus
    - portability-rdr3
  tags:
    - linux

deploy_specific:
  stage: deploy
  needs:
    - job: build_client
      artifacts: true
  script:
    - ".\\code\\tools\\ci\\build.ps1 -DontBuild $true"
  environment:
    name: specific/$CI_BUILD_REF_NAME
  only:
    - branches
  tags:
    - vs2017
    - client
  except:
    - master
    - server-ci
    - tags
    
deploy_rdr3_specific:
  stage: deploy
  needs:
    - job: build_client_rdr3
      artifacts: true
  script:
    - ".\\code\\tools\\ci\\build.ps1 -DontBuild $true"
  environment:
    name: specific/$CI_BUILD_REF_NAME
  only:
    - branches
  tags:
    - vs2017
    - client2
  variables:
    IS_FXSERVER: '0'
    IS_LAUNCHER: '0'
    IS_RDR3: '1'
  except:
    - master
    - server-ci
    - tags

deploy_canary:
  stage: deploy
  needs:
    - job: build_client
      artifacts: true
  script:
    - ".\\code\\tools\\ci\\build.ps1 -DontBuild $true"
  environment:
    name: canary
  tags:
    - vs2017
    - client
  only:
    - master
    
deploy_canary_rdr3:
  stage: deploy
  needs:
    - job: build_client_rdr3
      artifacts: true
  script:
    - ".\\code\\tools\\ci\\build.ps1 -DontBuild $true"
  environment:
    name: canary
  tags:
    - vs2017
    - client2
  variables:
    IS_FXSERVER: '0'
    IS_LAUNCHER: '0'
    IS_RDR3: '1'
  only:
    - master
    
deploy_launcher:
  stage: deploy
  needs:
    - job: build_launcher
      artifacts: true
  variables:
    IS_LAUNCHER: '1'
  script:
    - ".\\code\\tools\\ci\\build.ps1 -DontBuild $true"
  environment:
    name: canary
  tags:
    - vs2017
    - client
  only:
    - master

deploy_prod:
  stage: deploy
  needs:
    - job: build_client
      artifacts: true
  script:
    - ".\\code\\tools\\ci\\build.ps1 -DontBuild $true"
  environment:
    name: production
  when: manual
  tags:
    - vs2017
    - client
  only:
    - master
    
deploy_prod_rdr3:
  stage: deploy
  needs:
    - job: build_client_rdr3
      artifacts: true
  script:
    - ".\\code\\tools\\ci\\build.ps1 -DontBuild $true"
  environment:
    name: production
  when: manual
  tags:
    - vs2017
    - client2
  variables:
    IS_FXSERVER: '0'
    IS_LAUNCHER: '0'
    IS_RDR3: '1'
  only:
    - master
    
typings_server:
  stage: deploy
  needs:
    - job: build_server_windows
      artifacts: true
  image: node:alpine
  tags:
    - linux
  only:
    - master
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    # workaround gitlab-ci-multi-runner#2148
    GIT_SSL_CAPATH: /etc/ssl/certs/
  script:
    - sh ext/typings/server/build.sh
    
typings_client:
  stage: deploy
  needs:
    - job: build_client
      artifacts: true
  tags:
    - vs2017
  only:
    - master
  script:
    - "cmd /c ext\\typings\\client\\build.bat"
    
nuget_client:
  stage: deploy
  needs:
    - job: build_client
      artifacts: true
  tags:
    - vs2017
  only:
    - master
  script:
    - "cmd /c ext\\nuget\\client\\build.bat"
    
nuget_server:
  stage: deploy
  needs:
    - job: build_server_windows
      artifacts: true
  tags:
    - vs2017
  only:
    - master
  script:
    - "cmd /c ext\\nuget\\server\\build.bat"
